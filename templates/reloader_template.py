from PyQt5 import QtCore, QtGui, QtWidgets
class Ui_ConfigureReloaderDialogBase(object):
    def setupUi(self, ConfigureReloaderDialogBase):
        ConfigureReloaderDialogBase.setObjectName("ConfigureReloaderDialogBase")
        ConfigureReloaderDialogBase.resize(500, 257)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(ConfigureReloaderDialogBase.sizePolicy().hasHeightForWidth())
        ConfigureReloaderDialogBase.setSizePolicy(sizePolicy)
        ConfigureReloaderDialogBase.setMaximumSize(QtCore.QSize(500, 300))
        ConfigureReloaderDialogBase.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        ConfigureReloaderDialogBase.setWhatsThis("")
        self.gridLayout = QtWidgets.QGridLayout(ConfigureReloaderDialogBase)
        self.gridLayout.setObjectName("gridLayout")
        self.cbNotifications = QtWidgets.QCheckBox(ConfigureReloaderDialogBase)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cbNotifications.sizePolicy().hasHeightForWidth())
        self.cbNotifications.setSizePolicy(sizePolicy)
        self.cbNotifications.setObjectName("cbNotifications")
        self.gridLayout.addWidget(self.cbNotifications, 6, 0, 1, 1)
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setContentsMargins(-1, -1, -1, 6)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.pteExtraCommands = QtWidgets.QPlainTextEdit(ConfigureReloaderDialogBase)
        self.pteExtraCommands.setEnabled(False)
        self.pteExtraCommands.setObjectName("pteExtraCommands")
        self.gridLayout_2.addWidget(self.pteExtraCommands, 0, 1, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(30, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem, 0, 0, 1, 1)
        self.lblExtraCommands = QtWidgets.QLabel(ConfigureReloaderDialogBase)
        self.lblExtraCommands.setEnabled(False)
        self.lblExtraCommands.setObjectName("lblExtraCommands")
        self.gridLayout_2.addWidget(self.lblExtraCommands, 1, 1, 1, 1)
        self.gridLayout.addLayout(self.gridLayout_2, 4, 0, 1, 1)
        self.buttonBox = QtWidgets.QDialogButtonBox(ConfigureReloaderDialogBase)
        self.buttonBox.setFocusPolicy(QtCore.Qt.NoFocus)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setCenterButtons(True)
        self.buttonBox.setObjectName("buttonBox")
        self.gridLayout.addWidget(self.buttonBox, 7, 0, 1, 1)
        self.label = QtWidgets.QLabel(ConfigureReloaderDialogBase)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.cbExtraCommands = QtWidgets.QCheckBox(ConfigureReloaderDialogBase)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cbExtraCommands.sizePolicy().hasHeightForWidth())
        self.cbExtraCommands.setSizePolicy(sizePolicy)
        self.cbExtraCommands.setObjectName("cbExtraCommands")
        self.gridLayout.addWidget(self.cbExtraCommands, 2, 0, 1, 1)
        self.comboPlugin = QtWidgets.QComboBox(ConfigureReloaderDialogBase)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboPlugin.sizePolicy().hasHeightForWidth())
        self.comboPlugin.setSizePolicy(sizePolicy)
        self.comboPlugin.setMinimumSize(QtCore.QSize(220, 0))
        self.comboPlugin.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.comboPlugin.setObjectName("comboPlugin")
        self.gridLayout.addWidget(self.comboPlugin, 1, 0, 1, 1)
        self.lblExtraCommands.setBuddy(self.pteExtraCommands)
        self.label.setBuddy(self.comboPlugin)
        self.retranslateUi(ConfigureReloaderDialogBase)
        self.buttonBox.accepted.connect(ConfigureReloaderDialogBase.accept) # type: ignore
        self.buttonBox.rejected.connect(ConfigureReloaderDialogBase.reject) # type: ignore
        self.cbExtraCommands.toggled['bool'].connect(self.pteExtraCommands.setEnabled) # type: ignore
        self.cbExtraCommands.toggled['bool'].connect(self.lblExtraCommands.setEnabled) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(ConfigureReloaderDialogBase)
        ConfigureReloaderDialogBase.setTabOrder(self.comboPlugin, self.cbExtraCommands)
        ConfigureReloaderDialogBase.setTabOrder(self.cbExtraCommands, self.pteExtraCommands)
        ConfigureReloaderDialogBase.setTabOrder(self.pteExtraCommands, self.cbNotifications)
    def retranslateUi(self, ConfigureReloaderDialogBase):
        _translate = QtCore.QCoreApplication.translate
        ConfigureReloaderDialogBase.setWindowTitle(_translate("ConfigureReloaderDialogBase", "Configure Plugin reloader"))
        self.cbNotifications.setToolTip(_translate("ConfigureReloaderDialogBase", "<html><head/><body><p>Push a notification about the successful reload to the QGIS message bar.</p><p><span style=\" font-weight:600;\">Check this</span>, if you like to be sure you reloaded the right plugin.</p><p><span style=\" font-weight:600;\">Uncheck this</span>, if you hate trivial notifications covering error messages from the plugin.</p></body></html>"))
        self.cbNotifications.setText(_translate("ConfigureReloaderDialogBase", "Display a notification once the plugin is reloaded"))
        self.pteExtraCommands.setToolTip(_translate("ConfigureReloaderDialogBase", "<html><head/><body><p>QGIS will try to execute any commands typed here in a shell before reloading the plugin.</p>\n"
"<p>This can be useful, for example, if you need to copy the new source code into the QGIS plugins directory.</p></body></html>"))
        self.lblExtraCommands.setText(_translate("ConfigureReloaderDialogBase", "Note: any %PluginName% will be replaced by the plugin\'s name."))
        self.label.setText(_translate("ConfigureReloaderDialogBase", "Select &the plugin you want to reload"))
        self.cbExtraCommands.setToolTip(_translate("ConfigureReloaderDialogBase", "<html><head/><body><p>QGIS will try to execute any commands typed here in a shell before reloading the plugin.</p>\n"
"<p>This can be useful, for example, if you need to copy the new source code into the QGIS plugins directory.</p></body></html>"))
        self.cbExtraCommands.setText(_translate("ConfigureReloaderDialogBase", "Run the commands below before reloading"))
